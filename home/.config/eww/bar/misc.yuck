(defpoll discord_running :initial 0 :interval "1.0s" "pgrep Discord | wc -l")
(defpoll steam_running :initial 0 :interval "1.0s" "pgrep steam | wc -l")
(defpoll spotify_running :initial 0 :interval "1.0s" "pgrep spotify | wc -l")

(defpoll num_monitors :initial 1 :interval "1.0s" "hyprctl monitors | grep Monitor | wc -l")
; Note, escape backslashes here!
(defpoll refresh_primary :initial 144 :interval "10.0s" "hyprctl monitors | grep -oP '3840x2160@\\K[0-9]+(\\.[0-9]+)?' | head -n 1")
(defpoll refresh_secondary :initial 60 :interval "10.0s" "hyprctl monitors | grep -oP '3840x2160@\\K[0-9]+(\\.[0-9]+)?' | head -n 2 | tail -n 1")

(defvar steammenu_state false)
(defpoll controller_connected :initial false :interval "1.0s" "~/.config/eww/bar/scripts/controller.sh check")

(defvar spotifymenu_state false)
(defpoll speaker_connected :initial false :interval "1.0s" "~/.config/eww/bar/scripts/speaker.sh check")
(defpoll spotify_state :initial "Paused" :interval "1.0s" "playerctl status -p spotify")

(defwidget misc []
  (box :orientation "h" :space-evenly "false"
    :class "system-tray"
    ; ----- Spotify -----
    (revealer :transition "slideright"
      :reveal spotifymenu_state
      :duration "500ms"
      (box
        :orientation "h"
        (button
          :class "button close"
          :onclick "
          eww update confirm_dialog_prompt=\"Close Spotify?\";
          eww update confirm_dialog_command=\"pkill spotify\";
          eww open confirm_dialog --screen 1"
          :tooltip "Close Spotify"
          {"󱄊"}
        )
        (button
          :class "button"
          :onclick "playerctl previous --player spotify"
          "󰙤"
        )
        (button
          :class "button"
          :onclick "playerctl play-pause --player spotify"
          {spotify_state == "Paused" ? "" : "" }
        )
        (button
          :class "button"
          :onclick "playerctl next --player spotify"
          "󰙢"
        )
        (button
          :class {speaker_connected ? "button connected" : "button disconnected"}
          :onclick "~/.config/eww/bar/scripts/speaker.sh connect &"
          :tooltip {speaker_connected ? "Schrammelband" : "Click to connect to last controller."}
          {speaker_connected  ? "󰦢" : "󰓄"}
        )
      )
    )
    (button
      :class {spotify_running > 0 ? "app open spotify" : "hidden"}
      :onrightclick "hyprctl dispatch focuswindow spotify"
      :onclick {spotifymenu_state == true ? "eww update spotifymenu_state=false" : "eww update spotifymenu_state=true"}
      :tooltip "Open menu | Goto Spotify"
      {spotify_running > 0 ? "" : ""}
    )
    ; ------ Disord ------
    (button
      :class {discord_running > 0 ? "app open discord" : "hidden"}
      :onclick "hyprctl dispatch focuswindow discord"
      :onrightclick "pkill Discord"
      {discord_running > 0 ? "󰙯" : ""}
    )
    ; ------ Steam ------
    (revealer :transition "slideright"
      :reveal steammenu_state
      :duration "500ms"
      (box
        :orientation "h"
        (button
          :class "button close"
          :onclick "
          eww update confirm_dialog_prompt=\"Close steam?\";
          eww update confirm_dialog_command=\"pkill steam\";
          eww open confirm_dialog --screen 1"
          :tooltip "Close Steam"
          {"󱄊"}
        )
        (button
          :class {controller_connected ? "button connected" : "button disconnected"}
          :onclick "~/.config/eww/bar/scripts/controller.sh connect &"
          :tooltip {controller_connected ? "Xbox" : "Click to connect Xbox Controller"}
          {controller_connected ? "󰊴" : "󰊵"}
        )
      )
    )
    (button
      :class {steam_running > 0 ? "app open steam" : "hidden"}
      :onrightclick "hyprctl dispatch focuswindow steam"
      :onclick {steammenu_state == true ? "eww update steammenu_state=false" : "eww update steammenu_state=true"}
      :tooltip "Open menu | Goto Steam"
      {steam_running > 0 ? "󰓓" : ""}
    )
    (box :orientation "h" :class "separator")
    ; ------ Monitors ------
    (button
      :class "monitor framerate secondary"
      :onclick "[[ $(hyprctl monitors | grep Monitor | wc -l) == 2 ]] && hyprctl keyword monitor DP-1,disable || hyprctl keyword monitor DP-1,3840x2160@60,3840x0,2.0"
      {num_monitors == 2 ? round(refresh_secondary, 0) : ""}
    )
    (button
      :class "monitor"
      :onclick "[[ $(hyprctl monitors | grep Monitor | wc -l) == 2 ]] && hyprctl keyword monitor DP-1,disable || hyprctl keyword monitor DP-1,3840x2160@60,3840x0,2.0"
      {num_monitors == 1 ? "󰍹" : "󰍺"}
    )
    (button
      :class "monitor framerate primary"
      :onclick "[[ $(hyprctl monitors | grep Monitor | wc -l) == 2 ]] && hyprctl keyword monitor DP-1,disable || hyprctl keyword monitor DP-1,3840x2160@60,3840x0,2.0"
      {round(refresh_primary, 0)}
    )
  )
)

